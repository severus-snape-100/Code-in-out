#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int a[n];
    int i;
    //taking input
    for(i=0; i<n; i++)
    {
        cin>>a[i];
    }
    
    //for calculating nesting depth
    //a count variable will count the type of brackets and 
    //another max variable will keep the maximum value of the count 
    
    int count=0,max=0;
    for(i=0; i<n; i++)
    {
        if(a[i]==1)
        {
            count++;
        }
        else
        {
            count--;
        }
        if(count>max)
        {
            max=count;
        }
    }
    cout<<max<<" ";
    
    
    // converting the given array into another array
    // sum will be calculated and the position where sum will be
    // equal to max will be reported
    
    //copying the array in modified form
    int duplicate[n];
    for(i=0; i<n; i++)
    {
        if(a[i]==2)
        {
            duplicate[i]=-1;
        }
        else 
        {
            duplicate[i]=a[i];
        }
    }
    
    //calculating sum
    int sum=0;
    int flag;
    for(i=0; i<n; i++)
    {
        sum=sum+duplicate[i];
        if(sum==max)
        {
            flag=i;
            break;
        }
    }
    cout<<flag+1<<" ";
    
    
    //counting matching brackets
    int max_matching=0;
    int count_matching=0;
    int sum1=0;
    int flag2;
    for(i=0; i<n; i++)
    {
        sum1=sum1+duplicate[i];
        if(sum1>0)
        {
            count_matching++;
        }
        else
        {
            count_matching=0;
        }
        if(count_matching>max_matching)
        {
            max_matching=count_matching;
            flag2=i;
        }
    }
    cout<<max_matching+1<<" ";
    
    
    int sum3=0;
    int flag3;
    for(i=flag2+1; i>=0; i--)
    {
        sum3=sum3+duplicate[i];
        if(sum3==0)
        {
            flag3=i;
            break;
        }
    }
    cout<<flag3+1;
}
